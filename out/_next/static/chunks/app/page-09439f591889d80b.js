(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{7785:(e,r,t)=>{Promise.resolve().then(t.bind(t,696))},696:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>s});var n=t(1133),a=t(1321);function l(e){let{statusMessage:r}=e;return(0,n.jsx)("p",{id:"statusParagraph",style:{whiteSpace:"pre-wrap"},children:r})}let s=function(){let[e,r]=(0,a.useState)(null),[t,s]=(0,a.useState)("No untar library loaded."),[i,o]=(0,a.useState)(null),u=setInterval(()=>{"function"==typeof untar&&(clearInterval(u),s("Untar library is loaded."))},200),c=function(e){let r="";return e.forEach(e=>{r+=e.name+"\n"}),r};return(0,n.jsxs)("div",{children:[(0,n.jsx)("h1",{children:"Untar & IDB Test"}),(0,n.jsx)("input",{type:"file",onChange:e=>{let t=e.target.files[0];if("application/x-tar"!==t.type){alert("Please select a tar file");return}r(t)}}),(0,n.jsx)("br",{}),(0,n.jsx)("br",{}),(0,n.jsx)("button",{onClick:()=>{if(null===e){alert("Please select a file first.");return}s("Untarring...");let r=new FileReader;r.onload=function(e){untar(r.result).then(function(e){o(e),console.log(e),s(e.length+" files extracted:\n"+c(e))},function(e){console.log("error handler"),s("Error: "+r.error.message)})},r.onerror=function(e){s("Error: "+r.error.message)},r.readAsArrayBuffer(e)},children:"Untar"}),(0,n.jsx)(l,{statusMessage:t})]})}}},e=>{var r=r=>e(e.s=r);e.O(0,[634,775,358],()=>r(7785)),_N_E=e.O()}]);